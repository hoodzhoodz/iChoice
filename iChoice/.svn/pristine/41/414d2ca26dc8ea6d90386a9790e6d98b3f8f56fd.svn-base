package com.choicemmed.ichoice.healthcheck.fragment.pulseoximeter;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.graphics.Color;
import android.text.SpannableString;
import android.text.style.AbsoluteSizeSpan;
import android.util.Log;
import android.widget.TextView;

import com.choicemmed.ichoice.R;
import com.choicemmed.ichoice.framework.application.App;
import com.choicemmed.ichoice.framework.base.BaseFragment;
import com.choicemmed.ichoice.healthcheck.custom.Spo2YFormatter;
import com.choicemmed.ichoice.healthcheck.custom.TimeXFormatter;
import com.choicemmed.ichoice.healthcheck.db.OxSpotOperation;
import com.github.mikephil.charting.charts.LineChart;
import com.github.mikephil.charting.components.XAxis;
import com.github.mikephil.charting.components.YAxis;
import com.github.mikephil.charting.data.Entry;
import com.github.mikephil.charting.data.LineData;
import com.github.mikephil.charting.data.LineDataSet;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import butterknife.BindView;
import pro.choicemmed.datalib.OxSpotData;


public class OXRealCheckFragment extends BaseFragment {
    static String TAG = OXRealCheckFragment.class.getSimpleName();


    @BindView(R.id.spo2_chart)
    LineChart spo2Chart;
    @BindView(R.id.pluse_rate_chart)
    LineChart pluseRateChart;
    @BindView(R.id.rr_chart)
    LineChart rrChart;
    private Calendar mCalendar;
    List<Entry> spEntries = new ArrayList<>();
    List<Entry> prEntries = new ArrayList<>();
    List<Entry> rrEntries = new ArrayList<>();
    LineDataSet spSet, prSet, rrSet;
    private OxSpotOperation oxSpotOperation;
    int spo2, pr, pi;
    BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {
        @Override
        public void onReceive(Context context, Intent intent) {
            try {
//                setViewData();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    };

    @Override
    protected int contentViewID() {
        return R.layout.fragment__ox_real_check;
    }

    @Override
    protected void initialize() {
//        String string = "SpO2 ";
//        SpannableString spannableString = new SpannableString(string);
//        spannableString.setSpan(new AbsoluteSizeSpan(40), string.indexOf("2"), string.indexOf(" "), 0);
//        tv_spo2Text.setText(spannableString);
//        oxSpotOperation = new OxSpotOperation(getActivity());
//        initReceiver();
//        setViewData();
        mCalendar = Calendar.getInstance();
        initReceiver();
        initChart();
    }

    private void initChart() {
        setSpO2Chart();
        setPluseRateChart();
        setRRChart();
    }

    private void setRRChart() {
        rrChart.setBackgroundColor(Color.WHITE);
        rrChart.setDrawGridBackground(true);
        rrChart.setDrawBorders(false);
        rrChart.setGridBackgroundColor(Color.WHITE);
        rrChart.getDescription().setEnabled(false);
        rrChart.fitScreen();
        rrChart.setScaleEnabled(false);
        rrChart.getAxisRight().setEnabled(false);
        rrChart.setTouchEnabled(false);

        YAxis rrChartAxisLeft = rrChart.getAxisLeft();
        rrChartAxisLeft.setAxisMaximum(70);
        rrChartAxisLeft.setAxisMinimum(0);
        rrChartAxisLeft.setLabelCount(7);

        XAxis rrChartXAxis = rrChart.getXAxis();
        rrChartXAxis.setTextSize(8f);
        rrChartXAxis.setAxisMaximum(3);
        rrChartXAxis.setAxisMinimum(0);
        rrChartXAxis.setLabelCount(3);
        rrChartXAxis.setPosition(XAxis.XAxisPosition.BOTTOM);
        rrChartXAxis.setValueFormatter(new TimeXFormatter(mCalendar));

        rrSet = new LineDataSet(rrEntries, getString(R.string.rr));
        rrSet.setColor(Color.rgb(138, 43, 226));
        rrSet.setDrawCircles(false);
        rrSet.setDrawValues(false);
        LineData splineData = new LineData(rrSet);
        rrChart.setData(splineData);
    }

    private void setSpO2Chart() {
        spo2Chart.setBackgroundColor(Color.WHITE);
        spo2Chart.setDrawGridBackground(true);
        spo2Chart.setDrawBorders(false);
        spo2Chart.setGridBackgroundColor(Color.WHITE);
        spo2Chart.getDescription().setEnabled(false);
        spo2Chart.fitScreen();
        spo2Chart.setScaleEnabled(false);
        spo2Chart.getAxisRight().setEnabled(false);
        spo2Chart.setTouchEnabled(false);

        YAxis spo2ChartAxisLeft = spo2Chart.getAxisLeft();
        spo2ChartAxisLeft.setAxisMaximum(100);
        spo2ChartAxisLeft.setAxisMinimum(90);
        spo2ChartAxisLeft.setLabelCount(5);
        spo2ChartAxisLeft.setValueFormatter(new Spo2YFormatter());

        XAxis spo2ChartXAxis = spo2Chart.getXAxis();
        spo2ChartXAxis.setTextSize(8f);
        spo2ChartXAxis.setAxisMaximum(3);
        spo2ChartXAxis.setAxisMinimum(0);
        spo2ChartXAxis.setLabelCount(3);
        spo2ChartXAxis.setPosition(XAxis.XAxisPosition.BOTTOM);
        spo2ChartXAxis.setValueFormatter(new TimeXFormatter(mCalendar));

        spSet = new LineDataSet(spEntries, getString(R.string.spo2));
        spSet.setColor(Color.rgb(138, 43, 226));
        spSet.setDrawCircles(false);
        spSet.setDrawValues(false);
        LineData splineData = new LineData(spSet);
        spo2Chart.setData(splineData);

    }

    private void setPluseRateChart() {
        pluseRateChart.setBackgroundColor(Color.WHITE);
        pluseRateChart.setDrawGridBackground(true);
        pluseRateChart.setDrawBorders(false);
        pluseRateChart.setGridBackgroundColor(Color.WHITE);
        pluseRateChart.getDescription().setEnabled(false);
        pluseRateChart.fitScreen();
        pluseRateChart.setScaleEnabled(false);
        pluseRateChart.getAxisRight().setEnabled(false);
        pluseRateChart.setTouchEnabled(false);

        YAxis pluseRateChartAxisLeft = pluseRateChart.getAxisLeft();
        pluseRateChartAxisLeft.setAxisMaximum(100);
        pluseRateChartAxisLeft.setAxisMinimum(80);
        pluseRateChartAxisLeft.setLabelCount(4);

        XAxis pluseRateChartXAxis = pluseRateChart.getXAxis();
        pluseRateChartXAxis.setTextSize(8f);
        pluseRateChartXAxis.setAxisMaximum(3);
        pluseRateChartXAxis.setAxisMinimum(0);
        pluseRateChartXAxis.setLabelCount(3);

        pluseRateChartXAxis.setPosition(XAxis.XAxisPosition.BOTTOM);
        pluseRateChartXAxis.setValueFormatter(new TimeXFormatter(mCalendar));

        prSet = new LineDataSet(prEntries, getString(R.string.pulse_rate));
        prSet.setColor(Color.rgb(138, 43, 226));
        prSet.setDrawCircles(false);
        prSet.setDrawValues(false);
        LineData prlineData = new LineData(prSet);
        pluseRateChart.setData(prlineData);
    }

    private void initReceiver() {
        IntentFilter intentFilter = new IntentFilter("onOxRealMeasureResult");
        getActivity().registerReceiver(broadcastReceiver, intentFilter);
    }

//    //初始化点测血氧数据显示
//    private void setViewData() {
//        Calendar calendar = Calendar.getInstance();
//        calendar.setTime(new Date());
//        OxSpotData oxSpotData = oxSpotOperation.queryByNow(App.getAppData().userProfileInfo.getUserId() + "");
//        if (oxSpotData == null) {
//            return;
//        }
//        Log.d(TAG, "setViewData: " + oxSpotData.toString());
//        tv_spo2.setText(oxSpotData.getBloodOxygen() + "");
//        tv_pr.setText(oxSpotData.getPulseRate() + "");
//        tv_pi.setText(oxSpotData.getPi() + "");
//    }

    @Override
    public void onDestroy() {
        super.onDestroy();
        getActivity().unregisterReceiver(broadcastReceiver);
    }
}
